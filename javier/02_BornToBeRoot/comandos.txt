HOSTNAME
	para cambiarlo ejecutar:
	cambiar el nombre en nano /etc/hostname
	y luego el login en nano etc/hosts
	(sudo) hostnamectl set-hostname nuevo_nombre
	hostname -> muestra el nombre del hostname.
	exec bash -> para rearrancar el bash y mostrar el cambio.

CAMBIO DE USUARIO
	su			: Cambio a root
	su -		: Cambio a root inicializa el entorno. Empezar de cero
	su usuario	: Cambia al "usuario"

INSTALACION DE PROGRAMAS
	(sudo) apt install nombre_programa
	(sudo) apt update
	(sudo) apt upgrade
	(sudo) apt full-update

USUARIOS
	(sudo) adduser nombre
	(sudo) userdel -r nombre - pero deja su grupo formado. -r borra su home
	(sudo) adduser usuario nombre_grupo

GRUPOS
	(sudo) groupadd nombre_grupo
	(sudo) delgroup nombre_grupo
	(sudo) usermod -g otro_grupo usuario - lo mueve a otro grupo
	(sudo) usermod -aG otro_grupo usuario - lo copia a otro grupo pero no pierde el original
	groups usuario
	getent group nombre_grupo - nombre_grupo:x:GID:lista_de_usuarios

SSH
config en /etc/ssh/sshd_config y sshd_config
	(sudo) service ssh status
	(sudo) service ssh restart
	hostname -I
	ip a - muestra ip donde esta el server
	(cliente) ssh usuario@localhost -p(num del forwarding)
	(cliente) exit

FIREWALL
	(sudo) ufw enable
	(sudo) ufw reload
	(sudo) ufw allow 4242
	(sudo) ufw deny 4242 - 4242/tcp (cierra para un protocolo determinado)
		(sudo) ufw status numbered - Muestra los numeros de procesos
		(sudo) ufw delete numero ejemplo 3.
	(sudo) ufw status
	(sudo) systemctl enable ufw - hace que se autoarranque al inicio de la maquina.


APPARMOR
	esta en etc/apparmor.d y se edita el sbin.dhclient y en cada linea
	se incluye la ruta del programa y y al lado se ponen unas etiquetas que da lospermisos
	por ejemplo Pxrm

SUDO
	apt install sudo
	config en /etc/sudoers.d/nombre_config (puede ser sudo_config)
	logs en /var/log y creamos carpeta "sudo"
	en sudo_config:
		Defaults  passwd_tries=3
		Defaults  badpass_message="Mensaje de error personalizado"
		Defaults  logfile="/var/log/sudo/sudo_config"
		Defaults  log_input, log_output
		Defaults  iolog_dir="/var/log/sudo"
		Defaults  requiretty
		Defaults  secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

PASSWORD
	encryptado: la de 42
	user: 2Adgjlsfhk
	root: 1Qetuowryip
	config en /etc/login.defs. modificar lineas:
	PASS_MAX_DAYS 30
	PASS_MIN_DAYS 2
	PASS_WARN_AGE 7
	(sudo) apt install libpam-pwquality (password fuerza checker)
		editar: /etc/pam.d/common-password. linea retry=3 (PASSWORD requisite)
		minlen=10 ucredit=-1 dcredit=-1 lcredit=-1 maxrepeat=3 reject_username difok=7 enforce_for_root
		minlen : minimo de longitud del passwd
		ucredit, lcredit, dcredit : minimo 1 de upper lower y digit
		maxrepeat : cuantos chars pueden repetirse seguidos.
		reject_username : no puede estar el login en el passwd
		difok : cuantos chars distintos tiene que tener el pass
		enforce_for_root : fuerza al root a seguir las mismas reglas
	getent shadow usuario -> comprueba que se ha cambiado la paswrd
	passwd - para cambiar el password

	IMPORTANTE:
	para estas reglas solo se aplican (las de 30 dias 2 y 7) a USUARIOS nuevos
	para que funcione en antiguos hay que hacer esto:
	sudo chage -M 30 -m 2 -W 7 usuario
	y verificar con: getent shadow usuario
	no mostrara quiza el cambio reciente pero se obtiene con:
	sudo chage -l usuario



SCRIPT
	muchos comandos salen en el idioma instalado. Se puede momentaneamente
	ponerlo en ingles como: LANG=en_us.UTF-8 who -b
	arch=$(uname -a) -> da informacion de la arquitectura. -a es que muestre todo
			pero ha de ser llamado asi que se hace con un:
			wall "Architecture: $arch"
	cpu_physical=$(lscpu | grep '^CPU(s):' | awk '{print $2}')
			lscpu da mucha info de la CPU.
			grep lleva a la primera linea que EMPIEZE (con el ^) por CPU(s)
			awk es un lenguaje de programacion y print imprimira el segundo campo ($2) (es CPU(s):     1)
	# RAM
	ram_total=$(free --mega | grep "^Mem:" | awk '{print $2}')
	ram_used=$(free --mega | grep "^Mem:" | awk '{print $3}')
	ram_percent=$(awk "BEGIN {printf \"%.2f\", $ram_used * 100 / $ram_total}")



CRONTAB Pxrm,

	define el tiempo en que se ejecuta.
	(sudo) crontab -e -> para acceder a el por primera vez
	(sudo) crontab -u root -e
	se genera un archivo con nombre de usuario en /var/spool/cron/crontabs
	* * * * * /root/monitoring.sh
	* * * * * sleep 30; /root/monitoring.sh
	(cada * indica un tiempo: de izda a derecha -> minutos(0-59), horas(0-23), dia (1-31), mes (1-12), dia semana (0-6, 0=Domingo) )
	la linea sleep hace que se ejecute cada 30 segundos.
	*/30 * * * * /root/monitoring.sh seria cada 30 minutos
	*/30 -> ejecuta cada 30 minutos pero si empieza a 12:02 el siguiente sera a 12:32
	30 solo -> ejecuta a y medias y puntos. 12:30, 1:00, etc...
	PARA PARARLO O REINICIARLO:
	sudo /etc/init.d/cron stop o start
	tambien:
	sudo systemctl stop cron
	sudo systemctl start cron
	sudo systemctl status cron


FIRMA
	NO HAY QUE ABRIR DE NUEVO LA MAQUINA YA QUE CAMBIA. HAY QUE CLONARLA
	O SACAR UN SNAPSHOT DE LA MISMA Y RESTAURAR A PARTIR DEL SNAPSHOT
	shasum nombre.vdi dentro de la carpeta creada /sgoingfre/nombre_maquina

CHECKS
	ls /usr/bin/*session - No entorno grafico

	sudo ufw status
	sudo service ufw status - check firewall

	sudo service ssh status - check ssh

	uname --kernel-version - check OS

	getent group sudo user42 - check user y GRUPOS

	sudo adduser name_user - anyade user y check pass policy

	sudo addgroup evaluating - Check group creacion

	sudo adduser name_user evaluating - check anyade a grupo

	hostname - check hostname

	sudo nano /etc/hostname - check cambio hostname
	sudo nano /etc/hosts
	sudo reboot
	hostname

	lsblk - check particiones

	which sudo - check sudo

	sudo adduser name_user sudo - check anyade user to sudo
	getent group sudo

	nano /etc/sudoers.d/sudo_config - check sudo rules

	cd -check sudo logs
	cd /var/log/sudo
	lss /usr/bin/*session - No entorno grafitatus numbered
	sudo ufw delete num_rule
	sudo ufw status numbered
	sudo ufw delete 5
	sudo ufw status numbered

	which ssh - check ssh advance
	sudo servis /usr/bin/*session - No entorno grafice ssh status

	ssh root@localhost -p 4241 -check ssh usermod
	ssh newuser@localhost -p 4241

	sudo crontab -u root -e - check crontab SCRIPT












